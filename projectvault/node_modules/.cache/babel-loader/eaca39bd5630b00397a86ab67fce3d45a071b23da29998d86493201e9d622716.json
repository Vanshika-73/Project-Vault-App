{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omsin\\\\Desktop\\\\Project Vault Main Folder\\\\ProjectVault\\\\projectvault\\\\src\\\\pages\\\\UploadSuccess\\\\UploadSuccess.jsx\",\n  _s = $RefreshSig$();\nimport './UploadSuccess.css';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { fetchAllProjectsOfUser } from '../../Service/api';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadSuccess() {\n  _s();\n  const {\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const [project, setProject] = useState(null);\n  const [flag, setFlag] = useState(true);\n  useEffect(() => {\n    if (flag) {\n      fetchData();\n      flag = false;\n    }\n  }, []);\n  const fetchData = async () => {\n    const response = await fetchAllProjectsOfUser(user.email);\n    const projectIDs = response.projects.documents;\n    const ID = projectIDs[projectIDs.length - 1];\n    console.log(ID);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-outer-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message-div\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"success-message\",\n          children: \"Your project has been successfully uploaded !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-project-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-project\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-text\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-text\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-text\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-text\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-text\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-text\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(UploadSuccess, \"BdUVwlIi27n3BFI1+0PhJAfuB/w=\", false, function () {\n  return [useAuth0];\n});\n_c = UploadSuccess;\nexport default UploadSuccess;\nvar _c;\n$RefreshReg$(_c, \"UploadSuccess\");","map":{"version":3,"names":["useAuth0","fetchAllProjectsOfUser","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadSuccess","_s","isAuthenticated","user","project","setProject","flag","setFlag","fetchData","response","email","projectIDs","projects","documents","ID","length","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/omsin/Desktop/Project Vault Main Folder/ProjectVault/projectvault/src/pages/UploadSuccess/UploadSuccess.jsx"],"sourcesContent":["import './UploadSuccess.css';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { fetchAllProjectsOfUser } from '../../Service/api';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction UploadSuccess() {\r\n  const { isAuthenticated, user } = useAuth0();\r\n  const [project, setProject] = useState(null);\r\n  const [flag, setFlag] = useState(true);\r\n  useEffect(()=>{\r\n    if(flag)\r\n    {\r\n      fetchData();\r\n      flag=false;\r\n    }\r\n    \r\n  },[]);\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetchAllProjectsOfUser(user.email);\r\n    const projectIDs=response.projects.documents;\r\n    const ID = projectIDs[projectIDs.length-1];\r\n    console.log(ID);\r\n  }\r\n  return (\r\n    <>\r\n      <div className='success-outer-div'>\r\n        <div className='success-message-div'>\r\n          <h1 className='success-message'>Your project has been successfully uploaded !</h1>\r\n        </div>\r\n        <div className='success-project-div'>\r\n          <div className='success-project'>\r\n            <p className='project-text'>title</p>\r\n            <p className='project-text'>title</p>\r\n            <p className='project-text'>title</p>\r\n            <p className='project-text'>title</p>\r\n            <p className='project-text'>title</p>\r\n            <p className='project-text'>title</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadSuccess;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}