{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omsin\\\\Desktop\\\\ProjectVault\\\\projectvault\\\\src\\\\pages\\\\AddProject\\\\AddProject.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AddProject.css';\nimport { uploadFile, uploadDocument } from '../../Service/api';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../../Components/Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddProject = () => {\n  _s();\n  const [textInputs, setTextInputs] = useState({\n    textInput1: '',\n    textInput2: ''\n  });\n  const [fileInputs, setFileInputs] = useState([]);\n  const [moreField, setmoreField] = useState(['']);\n  const [stringFileMap, setStringFileMap] = useState(new Map());\n  const [coverPhoto, setcoverPhoto] = useState('');\n  const [result, setResult] = useState('');\n  const {\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/', {\n        replace: true\n      });\n    }\n  }, [isAuthenticated]);\n  const handleFileChange = (e, key) => {\n    const file = e.target.files[0];\n    setStringFileMap(prevMap => new Map(prevMap.set(key, file)));\n  };\n  const handleTextChange = e => {\n    setTextInputs({\n      ...textInputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleCoverPhotoChange = e => {\n    setcoverPhoto(e.target.files[0]);\n  };\n  const handleTextmoreField = e => {\n    setmoreField(e.target.value);\n  };\n  const deleteField = input => {\n    stringFileMap.delete(input);\n    setFileInputs(fileInputs.filter(item => item !== input));\n  };\n  const addFileInput = () => {\n    if (fileInputs.includes(moreField)) return;\n    setmoreField('');\n    const newFileInputs = [...fileInputs, moreField];\n    setFileInputs(newFileInputs);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create a javascript object to store all data\n    const projectDocuments = [];\n\n    // Storing necessary details in JS Object\n    const projectData = {};\n    projectData['title'] = textInputs.textInput1;\n    projectData['description'] = textInputs.textInput2;\n    projectData['rating'] = 0;\n\n    // Storing Cover Photo in JS Object if provided\n    if (coverPhoto) {\n      const data = new FormData();\n      data.append(\"name\", coverPhoto.name);\n      data.append(\"file\", coverPhoto);\n      const coverPhotoLink = await uploadFile(data);\n      projectData['coverphoto'] = coverPhotoLink.path;\n    } else {\n      projectData['coverphoto'] = \"\";\n    }\n\n    // Storing the document links in array\n    for (const key of stringFileMap.keys()) {\n      const file = stringFileMap.get(key);\n      if (file) {\n        const data = new FormData();\n        data.append(\"name\", file.name);\n        data.append(\"file\", file);\n        const response = await uploadFile(data);\n\n        // Adding Document-DocumentLink as key-value pairs\n        projectDocuments.push({\n          key,\n          value: response.path\n        });\n      }\n    }\n    // Added documents object into our main object.\n    projectData['dynamicDocuments'] = projectDocuments;\n\n    // Uploaded Project to DB & recieved the documentID\n    const projectDocumentData = await uploadDocument(projectData);\n\n    // Storing the documentID in projects list of User.\n    const documentIDData = {};\n    documentIDData['id'] = projectDocumentData.id;\n    documentIDData['email'] = user.email;\n    await addProjectInUserProjects(documentIDData);\n\n    // Write code to implement the storing of all data in DB\n    // - we will upload a document in collection(projects)\n    // - fetch the document ID in response\n    // - store the document ID in USER Collection's project's List.\n    console.log(projectDocumentData);\n    try {\n      setResult(projectDocumentData.id);\n    } catch (e) {\n      setResult(e.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"textInput1\",\n            value: textInputs.textInput1,\n            onChange: handleTextChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"textInput2\",\n            value: textInputs.textInput2,\n            onChange: handleTextChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"UPLOAD COVER PHOTO (optional) : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: `coverphoto`,\n            onChange: e => handleCoverPhotoChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fileInputsContainer\",\n          children: fileInputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [`${input}`, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: `fileInput[${index}]`,\n                onChange: e => handleFileChange(e, input),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: e => deleteField(input),\n              children: \"Delete field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)]\n          }, input, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Add File Name :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"textInput2\",\n            value: moreField,\n            onChange: handleTextmoreField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addFileInput,\n          children: \"Add File Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: result,\n          target: \"_blank\",\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AddProject, \"UO9RqElEP3tK+mwDTgqfr718rfo=\", false, function () {\n  return [useAuth0, useNavigate];\n});\n_c = AddProject;\nexport default AddProject;\nvar _c;\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"names":["React","useState","useEffect","useRef","uploadFile","uploadDocument","useAuth0","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","AddProject","_s","textInputs","setTextInputs","textInput1","textInput2","fileInputs","setFileInputs","moreField","setmoreField","stringFileMap","setStringFileMap","Map","coverPhoto","setcoverPhoto","result","setResult","isAuthenticated","user","navigate","replace","handleFileChange","e","key","file","target","files","prevMap","set","handleTextChange","name","value","handleCoverPhotoChange","handleTextmoreField","deleteField","input","delete","filter","item","addFileInput","includes","newFileInputs","handleSubmit","preventDefault","projectDocuments","projectData","data","FormData","append","coverPhotoLink","path","keys","get","response","push","projectDocumentData","documentIDData","id","email","addProjectInUserProjects","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","map","index","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/omsin/Desktop/ProjectVault/projectvault/src/pages/AddProject/AddProject.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './AddProject.css';\r\nimport { uploadFile, uploadDocument } from '../../Service/api';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nconst AddProject = () => {\r\n  const [textInputs, setTextInputs] = useState({\r\n    textInput1: '',\r\n    textInput2: '',\r\n  });\r\n  const [fileInputs, setFileInputs] = useState([]);\r\n  const [moreField, setmoreField] = useState(['']);\r\n  const [stringFileMap, setStringFileMap] = useState(new Map());\r\n  const [coverPhoto, setcoverPhoto] = useState('');\r\n  const [result, setResult] = useState('');\r\n  const { isAuthenticated , user } = useAuth0();\r\n  const navigate = useNavigate();\r\n  React.useEffect(() => {\r\n      if (!isAuthenticated) {\r\n        navigate('/', { replace: true });\r\n      }\r\n  }, [isAuthenticated]);\r\n\r\n\r\n\r\n  const handleFileChange = (e, key) => {\r\n    const file = e.target.files[0];\r\n    setStringFileMap((prevMap) => new Map(prevMap.set(key, file)));\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    setTextInputs({ ...textInputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCoverPhotoChange = (e) => {\r\n    setcoverPhoto(e.target.files[0]);\r\n  };\r\n\r\n  const handleTextmoreField = (e) => {\r\n    setmoreField(e.target.value);\r\n  };\r\n\r\n  const deleteField = (input) => {\r\n    stringFileMap.delete(input);\r\n    setFileInputs(fileInputs.filter((item) => item !== input));\r\n  };\r\n\r\n  const addFileInput = () => {\r\n    if(fileInputs.includes(moreField))\r\n    return;\r\n    setmoreField('');\r\n    const newFileInputs = [...fileInputs, moreField];\r\n    setFileInputs(newFileInputs);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create a javascript object to store all data\r\n    const projectDocuments = [];\r\n\r\n    // Storing necessary details in JS Object\r\n    const projectData = {};\r\n    projectData['title'] = textInputs.textInput1;\r\n    projectData['description'] = textInputs.textInput2;\r\n    projectData['rating'] = 0;\r\n\r\n    // Storing Cover Photo in JS Object if provided\r\n    if (coverPhoto) {\r\n        const data = new FormData();\r\n        data.append(\"name\", coverPhoto.name);\r\n        data.append(\"file\", coverPhoto);\r\n        const coverPhotoLink = await uploadFile(data);\r\n        projectData['coverphoto'] = coverPhotoLink.path;\r\n    } else {\r\n        projectData['coverphoto'] = \"\";\r\n    }\r\n\r\n    // Storing the document links in array\r\n    for (const key of stringFileMap.keys()) {\r\n        const file = stringFileMap.get(key);\r\n        if (file) {\r\n            const data = new FormData();\r\n            data.append(\"name\", file.name);\r\n            data.append(\"file\", file);\r\n            const response = await uploadFile(data);\r\n\r\n            // Adding Document-DocumentLink as key-value pairs\r\n            projectDocuments.push({ key, value: response.path });\r\n        }\r\n    }\r\n    // Added documents object into our main object.\r\n    projectData['dynamicDocuments'] = projectDocuments;\r\n    \r\n    // Uploaded Project to DB & recieved the documentID\r\n    const projectDocumentData = await uploadDocument(projectData);\r\n\r\n    // Storing the documentID in projects list of User.\r\n    const documentIDData = {};\r\n    documentIDData['id']=projectDocumentData.id;\r\n    documentIDData['email']=user.email;\r\n    await addProjectInUserProjects(documentIDData);\r\n\r\n    // Write code to implement the storing of all data in DB\r\n    // - we will upload a document in collection(projects)\r\n    // - fetch the document ID in response\r\n    // - store the document ID in USER Collection's project's List.\r\n    console.log(projectDocumentData);\r\n    try {setResult(projectDocumentData.id);} \r\n    catch (e) {setResult(e.message);}\r\n};\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header/>\r\n      <div>\r\n      <form onSubmit={handleSubmit}>\r\n      <label>Title :<input type=\"text\" name=\"textInput1\" value={textInputs.textInput1} onChange={handleTextChange} required /></label>\r\n      <br/>\r\n      <label>Description :<input type=\"text\" name=\"textInput2\" value={textInputs.textInput2} onChange={handleTextChange} required /></label>\r\n      <br/>\r\n      <label>UPLOAD COVER PHOTO (optional) : <input type=\"file\" name={`coverphoto`} onChange={(e) => handleCoverPhotoChange(e)} /></label>\r\n      <div id=\"fileInputsContainer\">\r\n        {fileInputs.map((input, index) => (\r\n          <div key={input}>\r\n            <label>\r\n              {`${input}`}\r\n              <input type=\"file\" name={`fileInput[${index}]`} onChange={(e) => handleFileChange(e, input)} required />\r\n            </label>\r\n            <button type=\"button\"  onClick={(e) => deleteField(input)}>\r\n                Delete field\r\n            </button>\r\n            <br/>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <label>\r\n        Add File Name :\r\n        <input type=\"text\" name=\"textInput2\" value={moreField} onChange={handleTextmoreField} />\r\n      </label>\r\n      <button type=\"button\" onClick={addFileInput}>\r\n        Add File Input\r\n      </button>\r\n      <br/>\r\n\r\n      <button type=\"submit\">Submit</button>\r\n      <br/>\r\n      <br/>\r\n      <br/>\r\n      <a href={result} target='_blank'>{result}</a> \r\n    </form>\r\n      </div>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default AddProject;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}