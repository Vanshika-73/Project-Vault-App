{"ast":null,"code":"import axios from 'axios';\nconst API_URI = 'http://localhost:8000';\nexport const uploadFile = async data => {\n  try {\n    const response = await axios.post(`${API_URI}/file-upload`, data);\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};\nexport const uploadDocument = async data => {\n  try {\n    const response = await axios.post(`${API_URI}/document-upload`, JSON.stringify(data), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};\nexport const addUserSignInDataToDB = async data => {\n  try {\n    const response = await axios.post(`${API_URI}/add-user-sign-in-data`, JSON.stringify(data), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};\nexport const checkUserExists = async data => {\n  try {\n    const response = await axios.post(`${API_URI}/check-user-exists`, JSON.stringify(data), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};\nexport const connectProjectToUser = async data => {\n  try {\n    const response = await axios.post(`${API_URI}/connect-project-user`, JSON.stringify(data), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};\nexport const fetchProjectList = async (selectedDomain, selectedTopic) => {\n  try {\n    // Make an API request to fetch data from the database\n    const response = await axios.get(`${API_URI}/get-projects-list`, {\n      params: {\n        domain: selectedDomain,\n        topic: selectedTopic\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n  }\n};\nexport const checkProjectDownloadEligibilty = async (email, projectID) => {\n  try {\n    // Make an API request to fetch data from the database\n    const response = await axios.get(`${API_URI}/check-project-eligibilty`, {\n      params: {\n        email: email,\n        projectID: projectID\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n  }\n};\nexport const getBalance = async data => {\n  try {\n    // Make an API request to fetch data from the database\n    const response = await axios.get(`${API_URI}/get-balance`, {\n      params: {\n        email: data.email\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n  }\n};\nexport const updateEarn = async data => {\n  try {\n    const response = await axios.post(`${API_URI}/update-earn`, JSON.stringify(data), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};\nexport const addProjectInSold = async data => {\n  try {\n    const response = await axios.post(`${API_URI}/update-sold`, JSON.stringify(data), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};\nexport const fetchDropDownDataDB = async () => {\n  try {\n    const response = await axios.get(`${API_URI}/get-dropdown-data`);\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};\nexport const fetchProjectfromDB = async projectID => {\n  try {\n    const response = await axios.get(`${API_URI}/fetch-project`, {\n      params: {\n        projectID: projectID\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};\nexport const fetchAllProjectsOfUser = async emailID => {\n  try {\n    const response = await axios.get(`${API_URI}/fetch-projects-of-user`, {\n      params: {\n        email: emailID\n      }\n    });\n    console.log(\"hello = {}\");\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling the API ', error.message);\n  }\n};","map":{"version":3,"names":["axios","API_URI","uploadFile","data","response","post","error","console","log","message","uploadDocument","JSON","stringify","headers","addUserSignInDataToDB","checkUserExists","connectProjectToUser","fetchProjectList","selectedDomain","selectedTopic","get","params","domain","topic","checkProjectDownloadEligibilty","email","projectID","getBalance","updateEarn","addProjectInSold","fetchDropDownDataDB","fetchProjectfromDB","fetchAllProjectsOfUser","emailID"],"sources":["C:/Users/omsin/Desktop/Project Vault Main Folder/ProjectVault/projectvault/src/Service/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URI = 'http://localhost:8000';\r\n\r\nexport const uploadFile = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${API_URI}/file-upload`, data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n}\r\n\r\nexport const uploadDocument = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${API_URI}/document-upload`, JSON.stringify(data), {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n}\r\n\r\nexport const addUserSignInDataToDB = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${API_URI}/add-user-sign-in-data`, JSON.stringify(data), {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n}\r\n\r\nexport const checkUserExists = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${API_URI}/check-user-exists`, JSON.stringify(data), {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n}\r\n\r\nexport const connectProjectToUser = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${API_URI}/connect-project-user`, JSON.stringify(data), {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n}\r\n\r\nexport const fetchProjectList = async (selectedDomain, selectedTopic) => {\r\n    try {   \r\n        // Make an API request to fetch data from the database\r\n        const response = await axios.get(`${API_URI}/get-projects-list`, {\r\n            params: {\r\n                domain: selectedDomain,\r\n                topic: selectedTopic,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n    }\r\n};\r\n\r\nexport const checkProjectDownloadEligibilty = async (email, projectID) => {\r\n    try {   \r\n        // Make an API request to fetch data from the database\r\n        const response = await axios.get(`${API_URI}/check-project-eligibilty`, {\r\n            params: {\r\n                email: email,\r\n                projectID: projectID,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n    }\r\n};\r\n\r\nexport const getBalance = async (data) => {\r\n    try {   \r\n        // Make an API request to fetch data from the database\r\n        const response = await axios.get(`${API_URI}/get-balance`, {\r\n            params: {\r\n                email: data.email,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n    }\r\n};\r\n\r\nexport const updateEarn = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${API_URI}/update-earn`, JSON.stringify(data), {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n};\r\n\r\nexport const addProjectInSold = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${API_URI}/update-sold`, JSON.stringify(data), {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n};\r\n\r\nexport const fetchDropDownDataDB = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URI}/get-dropdown-data`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n};\r\n\r\nexport const fetchProjectfromDB = async (projectID) => {\r\n    try {\r\n        const response = await axios.get(`${API_URI}/fetch-project`, {\r\n            params: {\r\n                projectID: projectID,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n};\r\n\r\nexport const fetchAllProjectsOfUser = async (emailID) => {\r\n    try {\r\n        const response = await axios.get(`${API_URI}/fetch-projects-of-user`, {\r\n            params: {\r\n                email: emailID,\r\n            },\r\n        });\r\n        console.log(\"hello = {}\");\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling the API ', error.message);\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}