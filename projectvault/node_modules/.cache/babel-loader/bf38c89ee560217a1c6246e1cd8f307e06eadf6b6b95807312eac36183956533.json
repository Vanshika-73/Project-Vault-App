{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omsin\\\\Desktop\\\\Project Vault Main Folder\\\\ProjectVault\\\\projectvault\\\\src\\\\pages\\\\Profile\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { fetchAllProjectsOfUser } from '../../Service/api';\nimport { fetchProjectfromDB } from '../../Service/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const {\n    logout,\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const navigate = useNavigate();\n  const [projects, setProjects] = useState(null);\n  const [yourProjects, setYourProjects] = useState([]);\n  const [emptyList, setEmptyList] = useState(['L', 'O', 'A', 'D', 'I', 'N', 'G']);\n  const imagePath = process.env.PUBLIC_URL + '/images/coverImage.png';\n  React.useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/', {\n        replace: true\n      });\n    }\n    if (projects == null && (user === null || user === void 0 ? void 0 : user.email) != null) {\n      fetchProjectList(user.email);\n    }\n  }, []);\n  const fetchProjectList = async email => {\n    const ProjectsResponse = await fetchAllProjectsOfUser(email);\n    try {\n      setProjects(ProjectsResponse.projects.documents);\n      fetchProjectDatafromProjects(ProjectsResponse.projects.documents);\n    } catch (error) {}\n  };\n  const fetchProjectDatafromProjects = async projects2 => {\n    const ar = [];\n    for (let i = 0; i < projects2.length; i++) {\n      try {\n        const res = await fetchProjectfromDB(projects2[i]);\n        ar.push(res.project);\n      } catch (e) {\n        console.error('Error fetching project:', e);\n      }\n    }\n    setYourProjects(ar);\n  };\n  const handleProjectOpen = pid => {\n    navigate(`/project?projectID=${pid}`);\n  };\n  const handleLogOut = () => {\n    logout();\n  };\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-in\",\n          children: (!yourProjects || yourProjects.length == 0) && emptyList.map(current = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-logout\",\n        onClick: handleLogOut,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile does'nt exists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n_s(Profile, \"3c0RQmab7o5v8dtkoFuGD31q1D0=\", false, function () {\n  return [useAuth0, useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth0","fetchAllProjectsOfUser","fetchProjectfromDB","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","logout","isAuthenticated","user","navigate","projects","setProjects","yourProjects","setYourProjects","emptyList","setEmptyList","imagePath","process","env","PUBLIC_URL","replace","email","fetchProjectList","ProjectsResponse","documents","fetchProjectDatafromProjects","error","projects2","ar","i","length","res","push","project","e","console","handleProjectOpen","pid","handleLogOut","children","className","src","picture","fileName","_jsxFileName","lineNumber","columnNumber","name","map","current","onClick","_c","$RefreshReg$"],"sources":["C:/Users/omsin/Desktop/Project Vault Main Folder/ProjectVault/projectvault/src/pages/Profile/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";  \r\nimport { fetchAllProjectsOfUser } from '../../Service/api';\r\nimport { fetchProjectfromDB } from '../../Service/api';\r\n\r\nfunction Profile() {\r\n  const { logout, isAuthenticated, user } = useAuth0();\r\n  const navigate = useNavigate();\r\n  const [projects, setProjects] = useState(null);\r\n  const [yourProjects, setYourProjects] = useState([]);\r\n  const [emptyList, setEmptyList] = useState(['L','O','A','D','I','N','G']);\r\n  const imagePath = process.env.PUBLIC_URL + '/images/coverImage.png';\r\n\r\n\r\n  React.useEffect( () => {\r\n    \r\n    if (!isAuthenticated) {\r\n      navigate('/', { replace: true });\r\n    }\r\n    if (projects==null && user?.email!=null) \r\n    {\r\n      fetchProjectList(user.email);\r\n    }\r\n  }, []);\r\n\r\n  const fetchProjectList = async (email) => {\r\n    const ProjectsResponse = await fetchAllProjectsOfUser(email);\r\n    try {\r\n      setProjects(ProjectsResponse.projects.documents);\r\n      fetchProjectDatafromProjects(ProjectsResponse.projects.documents);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const fetchProjectDatafromProjects = async (projects2) => {\r\n    const ar = [];\r\n      for (let i = 0; i < projects2.length; i++) {\r\n        try {\r\n          const res = await fetchProjectfromDB(projects2[i]);\r\n          ar.push(res.project);\r\n        } catch (e) {\r\n          console.error('Error fetching project:', e);\r\n        }\r\n      }\r\n      setYourProjects(ar);\r\n  };\r\n  const handleProjectOpen = (pid) => {\r\n    navigate(`/project?projectID=${pid}`);\r\n  };\r\n  const handleLogOut = () => {\r\n    logout();\r\n  };\r\n\r\n  if(isAuthenticated)\r\n  {\r\n    return (\r\n      <>\r\n        <div className='user-info-div'>\r\n          <div className='user-image'>\r\n            <img src={user.picture} /> \r\n          </div>\r\n          <div className='user-info'>\r\n            <p className='info'>{user.name}</p>\r\n            <p className='info'>{user.email}</p>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        <div className='projects'>\r\n          <p>Your Projects</p>\r\n          <div className='projects-in'>\r\n            {/* {  yourProjects && yourProjects.length>0 && yourProjects.map((project) => (\r\n              <div key={project._id} className='project' onClick={() => handleProjectOpen(project._id)}>\r\n                <div className='image'>\r\n                { project.coverphoto!=\"\"\r\n                  ? <img src={project.coverphoto} />\r\n                  : <img src={imagePath} />\r\n                }\r\n                </div>\r\n                <div className='title'><p>{project.title}</p></div>\r\n              </div>\r\n            ))} */}\r\n            {\r\n              (!yourProjects || yourProjects.length==0)  && emptyList.map((current)=(\r\n                <div className='project'> \r\n                  <p></p>\r\n                </div>\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n        <button className='button-logout' onClick={handleLogOut}>Logout</button>\r\n      </>\r\n    );\r\n  }\r\n  else\r\n  {\r\n    return (\r\n      <>\r\n        <h1>Profile does'nt exists</h1> \r\n      </>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}