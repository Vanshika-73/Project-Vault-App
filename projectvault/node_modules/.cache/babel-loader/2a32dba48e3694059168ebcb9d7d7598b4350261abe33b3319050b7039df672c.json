{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omsin\\\\Desktop\\\\Project Vault Main Folder\\\\ProjectVault\\\\projectvault\\\\src\\\\pages\\\\UploadSuccess\\\\UploadSuccess.jsx\",\n  _s = $RefreshSig$();\nimport './UploadSuccess.css';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { fetchAllProjectsOfUser, fetchProjectfromDB } from '../../Service/api';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadSuccess() {\n  _s();\n  const imagePath = process.env.PUBLIC_URL + '/images/coverImage.png';\n  const navigate = useNavigate();\n  const {\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const [project, setProject] = useState(null);\n  const [flag, setFlag] = useState(true);\n  useEffect(() => {\n    if ((!project || project == null) && isAuthenticated) fetchData();\n  }, []);\n  const fetchData = async () => {\n    const response = await fetchAllProjectsOfUser(user.email);\n    const projectIDs = response.projects.documents;\n    const ID = projectIDs[projectIDs.length - 1];\n    const projectResponse = await fetchProjectfromDB(ID);\n    setProject(projectResponse.project);\n  };\n  const handleProjectClick = () => {\n    navigate(`/project?projectID=${project._id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-outer-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message-div\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"success-message\",\n          children: \"Your project has been successfully uploaded !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-project-div\",\n        children: [project && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-project\",\n          onClick: handleProjectClick,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-project-LHS\",\n            children: project.coverphoto ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: project.coverphoto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagePath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-project-RHS\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"project-title\",\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"project-desc\",\n              children: project.description.length > 90 ? project.description.slice(0, 90) + \"...\" : project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"project-price\",\n              children: [\"\\u20B9\", project.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-docs\",\n              children: project.documents.map((docs, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [index < 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"project-doc\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: docs.key\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 36\n                }, this), index == 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"project-doc\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), !project && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"load-button\",\n          onClick: fetchData,\n          children: \" load \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(UploadSuccess, \"3ykUmTyQQpnN10Zv5y7o+1O70yk=\", false, function () {\n  return [useNavigate, useAuth0];\n});\n_c = UploadSuccess;\nexport default UploadSuccess;\nvar _c;\n$RefreshReg$(_c, \"UploadSuccess\");","map":{"version":3,"names":["useAuth0","fetchAllProjectsOfUser","fetchProjectfromDB","React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadSuccess","_s","imagePath","process","env","PUBLIC_URL","navigate","isAuthenticated","user","project","setProject","flag","setFlag","fetchData","response","email","projectIDs","projects","documents","ID","length","projectResponse","handleProjectClick","_id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","coverphoto","src","title","description","slice","price","map","docs","index","key","_c","$RefreshReg$"],"sources":["C:/Users/omsin/Desktop/Project Vault Main Folder/ProjectVault/projectvault/src/pages/UploadSuccess/UploadSuccess.jsx"],"sourcesContent":["import './UploadSuccess.css';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { fetchAllProjectsOfUser, fetchProjectfromDB } from '../../Service/api';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction UploadSuccess() {\r\n  const imagePath = process.env.PUBLIC_URL + '/images/coverImage.png';\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated, user } = useAuth0();\r\n  const [project, setProject] = useState(null);\r\n  const [flag, setFlag] = useState(true);\r\n  useEffect(()=>{\r\n    if( ( !project || project==null) && isAuthenticated )\r\n      fetchData();\r\n  },[]);\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetchAllProjectsOfUser(user.email);\r\n    const projectIDs=response.projects.documents;\r\n    const ID = projectIDs[projectIDs.length-1];\r\n    const projectResponse = await fetchProjectfromDB(ID);\r\n    setProject(projectResponse.project);\r\n  };\r\n\r\n  const handleProjectClick = () => {\r\n    navigate(`/project?projectID=${project._id}`);\r\n  };\r\n  return (\r\n    <>\r\n      <div className='success-outer-div'>\r\n        <div className='success-message-div'>\r\n          <h1 className='success-message'>Your project has been successfully uploaded !</h1>\r\n        </div>\r\n        <div className='success-project-div'>\r\n          { project && \r\n            <div className='success-project' onClick={handleProjectClick}>\r\n              <div className='success-project-LHS'>\r\n                { project.coverphoto \r\n                  ? <img src={project.coverphoto} />\r\n                  : <img src={imagePath} />\r\n                }\r\n              </div>\r\n              <div className='success-project-RHS'>\r\n                <p className='project-title'>{project.title}</p>\r\n                <p className='project-desc'>\r\n                  {project.description.length > 90 ? project.description.slice(0, 90)+\"...\" : project.description}\r\n                </p>\r\n                <p className='project-price'>â‚¹{project.price}</p>\r\n                <div className='project-docs'>\r\n                  {project.documents.map((docs,index) => (\r\n                    <div key={index}>\r\n                      { index<2 && <div className='project-doc'><p>{docs.key}</p></div>}\r\n                      { index==2 && <div className='project-doc'><p>...</p></div>}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n          { !project &&\r\n              <div className='load-button' onClick={fetchData} > load </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadSuccess;\r\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,sBAAsB,EAAEC,kBAAkB,QAAQ,mBAAmB;AAC9E,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,wBAAwB;EACnE,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY,eAAe;IAAEC;EAAK,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtCC,SAAS,CAAC,MAAI;IACZ,IAAI,CAAE,CAACe,OAAO,IAAIA,OAAO,IAAE,IAAI,KAAKF,eAAe,EACjDM,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMxB,sBAAsB,CAACkB,IAAI,CAACO,KAAK,CAAC;IACzD,MAAMC,UAAU,GAACF,QAAQ,CAACG,QAAQ,CAACC,SAAS;IAC5C,MAAMC,EAAE,GAAGH,UAAU,CAACA,UAAU,CAACI,MAAM,GAAC,CAAC,CAAC;IAC1C,MAAMC,eAAe,GAAG,MAAM9B,kBAAkB,CAAC4B,EAAE,CAAC;IACpDT,UAAU,CAACW,eAAe,CAACZ,OAAO,CAAC;EACrC,CAAC;EAED,MAAMa,kBAAkB,GAAGA,CAAA,KAAM;IAC/BhB,QAAQ,CAAE,sBAAqBG,OAAO,CAACc,GAAI,EAAC,CAAC;EAC/C,CAAC;EACD,oBACE1B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eACE3B,OAAA;MAAK4B,SAAS,EAAC,mBAAmB;MAAAD,QAAA,gBAChC3B,OAAA;QAAK4B,SAAS,EAAC,qBAAqB;QAAAD,QAAA,eAClC3B,OAAA;UAAI4B,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAA6C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACNhC,OAAA;QAAK4B,SAAS,EAAC,qBAAqB;QAAAD,QAAA,GAChCf,OAAO,iBACPZ,OAAA;UAAK4B,SAAS,EAAC,iBAAiB;UAACK,OAAO,EAAER,kBAAmB;UAAAE,QAAA,gBAC3D3B,OAAA;YAAK4B,SAAS,EAAC,qBAAqB;YAAAD,QAAA,EAChCf,OAAO,CAACsB,UAAU,gBAChBlC,OAAA;cAAKmC,GAAG,EAAEvB,OAAO,CAACsB;YAAW;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAChChC,OAAA;cAAKmC,GAAG,EAAE9B;YAAU;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAExB,CAAC,eACNhC,OAAA;YAAK4B,SAAS,EAAC,qBAAqB;YAAAD,QAAA,gBAClC3B,OAAA;cAAG4B,SAAS,EAAC,eAAe;cAAAD,QAAA,EAAEf,OAAO,CAACwB;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChDhC,OAAA;cAAG4B,SAAS,EAAC,cAAc;cAAAD,QAAA,EACxBf,OAAO,CAACyB,WAAW,CAACd,MAAM,GAAG,EAAE,GAAGX,OAAO,CAACyB,WAAW,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAC,KAAK,GAAG1B,OAAO,CAACyB;YAAW;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9F,CAAC,eACJhC,OAAA;cAAG4B,SAAS,EAAC,eAAe;cAAAD,QAAA,GAAC,QAAC,EAACf,OAAO,CAAC2B,KAAK;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjDhC,OAAA;cAAK4B,SAAS,EAAC,cAAc;cAAAD,QAAA,EAC1Bf,OAAO,CAACS,SAAS,CAACmB,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAChC1C,OAAA;gBAAA2B,QAAA,GACIe,KAAK,GAAC,CAAC,iBAAI1C,OAAA;kBAAK4B,SAAS,EAAC,aAAa;kBAAAD,QAAA,eAAC3B,OAAA;oBAAA2B,QAAA,EAAIc,IAAI,CAACE;kBAAG;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,EAC/DU,KAAK,IAAE,CAAC,iBAAI1C,OAAA;kBAAK4B,SAAS,EAAC,aAAa;kBAAAD,QAAA,eAAC3B,OAAA;oBAAA2B,QAAA,EAAG;kBAAG;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,GAFnDU,KAAK;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEN,CAACpB,OAAO,iBACNZ,OAAA;UAAK4B,SAAS,EAAC,aAAa;UAACK,OAAO,EAAEjB,SAAU;UAAAW,QAAA,EAAE;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAAC5B,EAAA,CA7DQD,aAAa;EAAA,QAEHL,WAAW,EACMN,QAAQ;AAAA;AAAAoD,EAAA,GAHnCzC,aAAa;AA+DtB,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}