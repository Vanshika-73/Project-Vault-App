{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omsin\\\\Desktop\\\\ProjectVault\\\\projectvault\\\\src\\\\pages\\\\PaymentSuccess\\\\PaymentSuccess.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Header from '../../Components/Header/Header';\nimport './PaymentSuccess.css';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getBalance } from '../../Service/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PaymentSuccess() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const ORDERID = queryParams.get('orderId');\n  const RESPMSG = queryParams.get('message');\n  const SELLER = queryParams.get('seller');\n  const BUYER = queryParams.get('buyer');\n  const TXN_AMOUNT = queryParams.get('amount');\n  const PROJECT_ID = queryParams.get('projectid');\n  React.useEffect(() => {\n    callSuccessDataSave();\n  }, []);\n  const callSuccessDataSave = async () => {\n    const balanceResponse = await getBalance({\n      email: SELLER\n    });\n    const earn = calculateFinalEarn();\n    // call an API, to set these success data in DB\n  };\n  function calculateFinalEarn() {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello , you're PaymentSuccess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PaymentSuccess, \"2NjTqmjbyjJm1tqINZxB/VzxZNQ=\", false, function () {\n  return [useLocation];\n});\n_c = PaymentSuccess;\nexport default PaymentSuccess;\nvar _c;\n$RefreshReg$(_c, \"PaymentSuccess\");","map":{"version":3,"names":["React","useEffect","Header","useLocation","useNavigate","getBalance","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentSuccess","_s","search","queryParams","URLSearchParams","ORDERID","get","RESPMSG","SELLER","BUYER","TXN_AMOUNT","PROJECT_ID","callSuccessDataSave","balanceResponse","email","earn","calculateFinalEarn","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/omsin/Desktop/ProjectVault/projectvault/src/pages/PaymentSuccess/PaymentSuccess.jsx"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport Header from '../../Components/Header/Header';\r\nimport './PaymentSuccess.css';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { getBalance } from '../../Service/api';\r\n\r\nfunction PaymentSuccess() {\r\n  const { search } = useLocation();\r\n  const queryParams = new URLSearchParams(search);\r\n  const ORDERID=queryParams.get('orderId');\r\n  const RESPMSG=queryParams.get('message');\r\n  const SELLER=queryParams.get('seller');\r\n  const BUYER=queryParams.get('buyer');\r\n  const TXN_AMOUNT=queryParams.get('amount');\r\n  const PROJECT_ID=queryParams.get('projectid');\r\n  React.useEffect(()=>{\r\n    callSuccessDataSave();\r\n  }, []);\r\n  const callSuccessDataSave = async () => {\r\n    const balanceResponse = await getBalance({email: SELLER});\r\n    const earn = calculateFinalEarn();\r\n    // call an API, to set these success data in DB\r\n  }\r\n  function calculateFinalEarn(){\r\n      \r\n  }\r\n  return (\r\n    <>\r\n        <Header/>\r\n      <h1>Hello , you're PaymentSuccess</h1> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentSuccess;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAO,sBAAsB;AAC7B,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGT,WAAW,CAAC,CAAC;EAChC,MAAMU,WAAW,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC;EAC/C,MAAMG,OAAO,GAACF,WAAW,CAACG,GAAG,CAAC,SAAS,CAAC;EACxC,MAAMC,OAAO,GAACJ,WAAW,CAACG,GAAG,CAAC,SAAS,CAAC;EACxC,MAAME,MAAM,GAACL,WAAW,CAACG,GAAG,CAAC,QAAQ,CAAC;EACtC,MAAMG,KAAK,GAACN,WAAW,CAACG,GAAG,CAAC,OAAO,CAAC;EACpC,MAAMI,UAAU,GAACP,WAAW,CAACG,GAAG,CAAC,QAAQ,CAAC;EAC1C,MAAMK,UAAU,GAACR,WAAW,CAACG,GAAG,CAAC,WAAW,CAAC;EAC7ChB,KAAK,CAACC,SAAS,CAAC,MAAI;IAClBqB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMA,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMC,eAAe,GAAG,MAAMlB,UAAU,CAAC;MAACmB,KAAK,EAAEN;IAAM,CAAC,CAAC;IACzD,MAAMO,IAAI,GAAGC,kBAAkB,CAAC,CAAC;IACjC;EACF,CAAC;EACD,SAASA,kBAAkBA,CAAA,EAAE,CAE7B;EACA,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA,CAACL,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXxB,OAAA;MAAAoB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACtC,CAAC;AAEP;AAACpB,EAAA,CA1BQD,cAAc;EAAA,QACFP,WAAW;AAAA;AAAA6B,EAAA,GADvBtB,cAAc;AA4BvB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}