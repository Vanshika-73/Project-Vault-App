{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omsin\\\\Desktop\\\\ProjectVault\\\\projectvault\\\\src\\\\pages\\\\PaymentSuccess\\\\PaymentSuccess.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Header from '../../Components/Header/Header';\nimport './PaymentSuccess.css';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getBalance, updateEarn } from '../../Service/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PaymentSuccess() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const ORDERID = queryParams.get('orderId');\n  const RESPMSG = queryParams.get('message');\n  const SELLER = queryParams.get('seller');\n  const BUYER = queryParams.get('buyer');\n  const TXN_AMOUNT = queryParams.get('amount');\n  const PROJECT_ID = queryParams.get('projectid');\n  React.useEffect(() => {\n    callSuccessDataSave();\n  }, []);\n  const callSuccessDataSave = async () => {\n    try {\n      const balanceResponse = await getBalance({\n        email: SELLER\n      });\n      const finalEarn = calculateFinalEarn(balanceResponse.earned);\n      console.log(finalEarn);\n      const earnUpdationResponse = await updateEarn({\n        updatedEarn: finalEarn,\n        email: SELLER\n      });\n      if (!earnUpdationResponse.done) throw new Error('Failed to update earn data');\n      await addProjectIn;\n    } catch (e) {\n      alert('Faced some error in saving details in database !');\n    }\n    // call an API, to set these success data in DB\n  };\n  function calculateFinalEarn(currentEarn) {\n    var c = TXN_AMOUNT * 0.153;\n    c = c + currentEarn;\n    return c;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello , you're PaymentSuccess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PaymentSuccess, \"2NjTqmjbyjJm1tqINZxB/VzxZNQ=\", false, function () {\n  return [useLocation];\n});\n_c = PaymentSuccess;\nexport default PaymentSuccess;\nvar _c;\n$RefreshReg$(_c, \"PaymentSuccess\");","map":{"version":3,"names":["React","useEffect","Header","useLocation","useNavigate","getBalance","updateEarn","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentSuccess","_s","search","queryParams","URLSearchParams","ORDERID","get","RESPMSG","SELLER","BUYER","TXN_AMOUNT","PROJECT_ID","callSuccessDataSave","balanceResponse","email","finalEarn","calculateFinalEarn","earned","console","log","earnUpdationResponse","updatedEarn","done","Error","addProjectIn","e","alert","currentEarn","c","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/omsin/Desktop/ProjectVault/projectvault/src/pages/PaymentSuccess/PaymentSuccess.jsx"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport Header from '../../Components/Header/Header';\r\nimport './PaymentSuccess.css';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { getBalance, updateEarn } from '../../Service/api';\r\n\r\nfunction PaymentSuccess() {\r\n  const { search } = useLocation();\r\n  const queryParams = new URLSearchParams(search);\r\n  const ORDERID=queryParams.get('orderId');\r\n  const RESPMSG=queryParams.get('message');\r\n  const SELLER=queryParams.get('seller');\r\n  const BUYER=queryParams.get('buyer');\r\n  const TXN_AMOUNT=queryParams.get('amount');\r\n  const PROJECT_ID=queryParams.get('projectid');\r\n  React.useEffect(()=>{\r\n    callSuccessDataSave();\r\n  }, []);\r\n  const callSuccessDataSave = async () => {\r\n    try{\r\n      const balanceResponse = await getBalance({email: SELLER});\r\n      const finalEarn = calculateFinalEarn(balanceResponse.earned);\r\n      console.log(finalEarn);\r\n      const earnUpdationResponse = await updateEarn({updatedEarn: finalEarn, email: SELLER});\r\n      if(!earnUpdationResponse.done)\r\n      throw new Error('Failed to update earn data');\r\n      await addProjectIn\r\n    }\r\n    catch(e)\r\n    {alert('Faced some error in saving details in database !');}\r\n    // call an API, to set these success data in DB\r\n  }\r\n  function calculateFinalEarn(currentEarn) {\r\n    var c = TXN_AMOUNT * 0.153;\r\n    c = c + currentEarn;\r\n    return c;\r\n}\r\n  return (\r\n    <>\r\n        <Header/>\r\n      <h1>Hello , you're PaymentSuccess</h1> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentSuccess;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAO,sBAAsB;AAC7B,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,UAAU,EAAEC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGV,WAAW,CAAC,CAAC;EAChC,MAAMW,WAAW,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC;EAC/C,MAAMG,OAAO,GAACF,WAAW,CAACG,GAAG,CAAC,SAAS,CAAC;EACxC,MAAMC,OAAO,GAACJ,WAAW,CAACG,GAAG,CAAC,SAAS,CAAC;EACxC,MAAME,MAAM,GAACL,WAAW,CAACG,GAAG,CAAC,QAAQ,CAAC;EACtC,MAAMG,KAAK,GAACN,WAAW,CAACG,GAAG,CAAC,OAAO,CAAC;EACpC,MAAMI,UAAU,GAACP,WAAW,CAACG,GAAG,CAAC,QAAQ,CAAC;EAC1C,MAAMK,UAAU,GAACR,WAAW,CAACG,GAAG,CAAC,WAAW,CAAC;EAC7CjB,KAAK,CAACC,SAAS,CAAC,MAAI;IAClBsB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMA,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAG;MACD,MAAMC,eAAe,GAAG,MAAMnB,UAAU,CAAC;QAACoB,KAAK,EAAEN;MAAM,CAAC,CAAC;MACzD,MAAMO,SAAS,GAAGC,kBAAkB,CAACH,eAAe,CAACI,MAAM,CAAC;MAC5DC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;MACtB,MAAMK,oBAAoB,GAAG,MAAMzB,UAAU,CAAC;QAAC0B,WAAW,EAAEN,SAAS;QAAED,KAAK,EAAEN;MAAM,CAAC,CAAC;MACtF,IAAG,CAACY,oBAAoB,CAACE,IAAI,EAC7B,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC7C,MAAMC,YAAY;IACpB,CAAC,CACD,OAAMC,CAAC,EACP;MAACC,KAAK,CAAC,kDAAkD,CAAC;IAAC;IAC3D;EACF,CAAC;EACD,SAASV,kBAAkBA,CAACW,WAAW,EAAE;IACvC,IAAIC,CAAC,GAAGlB,UAAU,GAAG,KAAK;IAC1BkB,CAAC,GAAGA,CAAC,GAAGD,WAAW;IACnB,OAAOC,CAAC;EACZ;EACE,oBACE/B,OAAA,CAAAE,SAAA;IAAA8B,QAAA,gBACIhC,OAAA,CAACN,MAAM;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXpC,OAAA;MAAAgC,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACtC,CAAC;AAEP;AAAChC,EAAA,CArCQD,cAAc;EAAA,QACFR,WAAW;AAAA;AAAA0C,EAAA,GADvBlC,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}