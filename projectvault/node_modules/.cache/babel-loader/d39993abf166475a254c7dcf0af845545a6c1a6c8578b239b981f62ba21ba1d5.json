{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omsin\\\\Desktop\\\\Project Vault Main Folder\\\\ProjectVault\\\\projectvault\\\\src\\\\pages\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Login.css';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useNavigate } from 'react-router-dom';\nimport { addUserSignInDataToDB, checkUserExists } from '../../Service/api';\nimport { useData } from '../../DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    loginWithPopup,\n    isLoading,\n    logout,\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const navigate = useNavigate();\n  const {\n    lastPage\n  } = useData();\n  React.useEffect(() => {\n    if (isAuthenticated) {\n      handleAddSignInDataToDB();\n      navigate(lastPage, {\n        replace: true\n      });\n    }\n  }, [isAuthenticated]);\n  React.useEffect(() => {\n    loginWithPopup();\n  }, []);\n  async function handleAddSignInDataToDB() {\n    // check user exists or not in MongoDB\n    const data = {};\n    data['email'] = user.email;\n    const userState = await checkUserExists(data);\n    try {\n      if (!userState['exists']) await addUserSignInDataToDB(data);else console.log(\"User Existed.\");\n    } catch (e) {\n      console.log(\"Some internal error occured.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"CrzkPQiKc4w+zcpk5jg/ueDnOcQ=\", false, function () {\n  return [useAuth0, useNavigate, useData];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useAuth0","useNavigate","addUserSignInDataToDB","checkUserExists","useData","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","loginWithPopup","isLoading","logout","isAuthenticated","user","navigate","lastPage","handleAddSignInDataToDB","replace","data","email","userState","console","log","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/omsin/Desktop/Project Vault Main Folder/ProjectVault/projectvault/src/pages/Login/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Login.css';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { addUserSignInDataToDB, checkUserExists } from '../../Service/api';\r\nimport { useData } from '../../DataContext';\r\n\r\nfunction Login() {\r\n    const { loginWithPopup, isLoading, logout, isAuthenticated, user } = useAuth0();\r\n    const navigate = useNavigate();\r\n    const { lastPage } = useData();\r\n\r\n    React.useEffect( () => {\r\n        if (isAuthenticated) {\r\n            handleAddSignInDataToDB();\r\n            navigate(lastPage, { replace: true });\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    React.useEffect( () => {\r\n        loginWithPopup();\r\n    }, []);\r\n\r\n    async function handleAddSignInDataToDB(){\r\n        // check user exists or not in MongoDB\r\n        const data={};\r\n        data['email']= user.email ;\r\n        const userState = await checkUserExists(data);\r\n        try{\r\n            if(!userState['exists'])\r\n            await addUserSignInDataToDB(data);\r\n            else\r\n            console.log(\"User Existed.\");\r\n        }\r\n        catch(e)\r\n        {\r\n            console.log(\"Some internal error occured.\");\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div><p> </p></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,qBAAqB,EAAEC,eAAe,QAAQ,mBAAmB;AAC1E,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,cAAc;IAAEC,SAAS;IAAEC,MAAM;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAC/E,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEgB;EAAS,CAAC,GAAGb,OAAO,CAAC,CAAC;EAE9BP,KAAK,CAACE,SAAS,CAAE,MAAM;IACnB,IAAIe,eAAe,EAAE;MACjBI,uBAAuB,CAAC,CAAC;MACzBF,QAAQ,CAACC,QAAQ,EAAE;QAAEE,OAAO,EAAE;MAAK,CAAC,CAAC;IACzC;EACJ,CAAC,EAAE,CAACL,eAAe,CAAC,CAAC;EAErBjB,KAAK,CAACE,SAAS,CAAE,MAAM;IACnBY,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeO,uBAAuBA,CAAA,EAAE;IACpC;IACA,MAAME,IAAI,GAAC,CAAC,CAAC;IACbA,IAAI,CAAC,OAAO,CAAC,GAAEL,IAAI,CAACM,KAAK;IACzB,MAAMC,SAAS,GAAG,MAAMnB,eAAe,CAACiB,IAAI,CAAC;IAC7C,IAAG;MACC,IAAG,CAACE,SAAS,CAAC,QAAQ,CAAC,EACvB,MAAMpB,qBAAqB,CAACkB,IAAI,CAAC,CAAC,KAElCG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAChC,CAAC,CACD,OAAMC,CAAC,EACP;MACIF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C;EACJ;EAGA,oBACIlB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACIpB,OAAA;MAAAoB,QAAA,eAAKpB,OAAA;QAAAoB,QAAA,EAAG;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBACrB,CAAC;AAEX;AAACpB,EAAA,CAvCQD,KAAK;EAAA,QAC2DT,QAAQ,EAC5DC,WAAW,EACPG,OAAO;AAAA;AAAA2B,EAAA,GAHvBtB,KAAK;AAyCd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}