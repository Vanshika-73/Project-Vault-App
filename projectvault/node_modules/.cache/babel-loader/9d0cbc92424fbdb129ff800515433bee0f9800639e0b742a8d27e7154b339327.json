{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omsin\\\\Desktop\\\\ProjectVault\\\\projectvault\\\\src\\\\pages\\\\ProjectList\\\\ProjectList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ProjectList.css';\nimport { useLocation } from 'react-router-dom';\nimport Header from '../../Components/Header/Header';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchProjectList } from '../../Service/api';\nimport { useData } from '../../DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProjectList() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const [selectedDomain, setselectedDomain] = useState(queryParams.get('domain'));\n  const [selectedTopic, setselectedTopic] = useState(queryParams.get('topic'));\n  const {\n    dropdownData\n  } = useData();\n  const [projectList, setProjectList] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const handleCallProjectListAPI = async () => {\n    const response = await fetchProjectList(selectedDomain, selectedTopic);\n    setProjectList(response.projects);\n    setLoader(false);\n  };\n  useEffect(() => {\n    handleCallAPI();\n  }, []);\n  const handleProjectClick = project => {\n    const jsonData = project;\n    // Encode JSON data to a string and pass it as a URL parameter\n    const jsonDataString = encodeURIComponent(JSON.stringify(jsonData));\n    // Navigate to the next page with the project ID as a query parameter\n    navigate(`/project?data=${jsonDataString}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Here are your search results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-display\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedDomain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-display\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedTopic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !loader && projectList.length > 0 && projectList.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-box\",\n      onClick: () => handleProjectClick(project),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LHS\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"av-docs\",\n          children: project.documents.map(docs => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"doc\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: docs.key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, docs.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RHS\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.domain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [project.rating, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, project._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(ProjectList, \"jTm+JsXcv/2nX9cUIXPBL13h4hc=\", false, function () {\n  return [useNavigate, useLocation, useData];\n});\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Header","useNavigate","fetchProjectList","useData","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectList","_s","navigate","search","queryParams","URLSearchParams","selectedDomain","setselectedDomain","get","selectedTopic","setselectedTopic","dropdownData","projectList","setProjectList","loader","setLoader","handleCallProjectListAPI","response","projects","handleCallAPI","handleProjectClick","project","jsonData","jsonDataString","encodeURIComponent","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","onClick","title","description","documents","docs","key","value","domain","rating","_id","_c","$RefreshReg$"],"sources":["C:/Users/omsin/Desktop/ProjectVault/projectvault/src/pages/ProjectList/ProjectList.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ProjectList.css';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Header from '../../Components/Header/Header';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchProjectList } from '../../Service/api';\r\nimport { useData } from '../../DataContext';\r\n\r\nfunction ProjectList() {\r\n  const navigate = useNavigate();\r\n  const { search } = useLocation();\r\n  const queryParams = new URLSearchParams(search);\r\n  const [selectedDomain, setselectedDomain] = useState(queryParams.get('domain'));\r\n  const [selectedTopic, setselectedTopic] = useState(queryParams.get('topic'));\r\n  const { dropdownData } = useData();\r\n  const [projectList, setProjectList] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  const handleCallProjectListAPI = async () => {\r\n    const response = await fetchProjectList(selectedDomain,selectedTopic);\r\n    setProjectList(response.projects);\r\n    setLoader(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCallAPI();\r\n  }, []);\r\n\r\n\r\n  const handleProjectClick = (project) => {\r\n    const jsonData = project;\r\n    // Encode JSON data to a string and pass it as a URL parameter\r\n    const jsonDataString = encodeURIComponent(JSON.stringify(jsonData));\r\n    // Navigate to the next page with the project ID as a query parameter\r\n    navigate(`/project?data=${jsonDataString}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header/>\r\n      <div className='heading'>\r\n        <h2>Here are your search results</h2>\r\n        <div className='fields'>\r\n          <div className='field-display'>\r\n            <p>{selectedDomain}</p>\r\n          </div>\r\n          <div className='field-display'>\r\n            <p>{selectedTopic}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      { !loader && projectList.length>0 && projectList.map((project) => (\r\n        <div className='project-box' key={project._id} onClick={() => handleProjectClick(project)}>\r\n        <div className='LHS'>\r\n          <h3>{project.title}</h3>\r\n          <p>{project.description}</p>\r\n          <div className='av-docs'>\r\n            {project.documents.map((docs) => (\r\n              <div key={docs.value}>\r\n                <div className='doc'><p>{docs.key}</p></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className='RHS'>\r\n          <div className='topic'>\r\n            <p>{project.domain}</p>\r\n          </div>\r\n          <div className='rating'>\r\n            <p>{project.rating}/5</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      ))}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}