{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omsin\\\\Desktop\\\\Project Vault Main Folder\\\\ProjectVault\\\\projectvault\\\\src\\\\pages\\\\EditProject\\\\EditProject.jsx\",\n  _s = $RefreshSig$();\nimport './EditProject.css';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { checkProjectOwnership, fetchProjectfromDB } from '../../Service/api';\nimport { updateAvailableDropDownDataDB, fetchDropDownDataDB, uploadFile, uploadDocument, connectProjectToUser } from '../../Service/api';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditProject() {\n  _s();\n  const {\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const navigate = useNavigate();\n  const {\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const projectID = queryParams.get('projectID');\n  const [loading, setLoading] = useState(true);\n  const [project, setProject] = useState(null);\n  const [textInputs, setTextInputs] = useState({\n    textInput1: '',\n    textInput2: ''\n  });\n  const [fileInputs, setFileInputs] = useState([]);\n  const [moreField, setmoreField] = useState(['']);\n  const [stringFileMap, setStringFileMap] = useState(new Map());\n  const [coverPhoto, setcoverPhoto] = useState('');\n  const [domain, setDomain] = useState('');\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [tag, setTag] = useState('');\n  const [price, setPrice] = useState(0);\n  const [domainList, setDomainList] = useState([]);\n  const [topicList, setTopicList] = useState([]);\n  const [projectLink, setProjectLink] = useState('');\n  const [coverFileName, setCoverFileName] = useState('');\n  const [addDocButtonOpen, setAddDocButtonOpen] = useState(false);\n  const [dropdownData, setDropdownData] = useState(null);\n  const coverInputRef = /*#__PURE__*/React.createRef();\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    if (dropdownData == null) setDomainsArray();\n  }, []);\n  useEffect(() => {\n    setTopicsArray();\n  }, [domain]);\n  React.useEffect(() => {\n    checkProjectOwnershipFunction();\n  }, [isAuthenticated]);\n  React.useEffect(() => {\n    if (isAuthenticated && projectID) fetchProjectData();\n  }, []);\n  const checkProjectOwnershipFunction = async () => {\n    if (!isAuthenticated) {\n      navigate('/', {\n        replace: true\n      });\n    } else {\n      const res = await checkProjectOwnership(user.email, projectID);\n      if (res.owner == false) {\n        navigate('/', {\n          replace: true\n        });\n      }\n    }\n  };\n  const fetchProjectData = async () => {\n    try {\n      const res = await fetchProjectfromDB(projectID);\n      setProject(res.project);\n      setDataInFields();\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n  const setDataInFields = () => {\n    setTextInputs({\n      textInput1: project.title,\n      textInput2: project.description\n    });\n    const obj1 = [];\n    for (var i = 0; i < project.documents.length; i++) {\n      obj1.push(project.documents[i].key);\n    }\n    setFileInputs(obj1);\n    const newMap = convertArrayToMap(project.documents);\n    setStringFileMap(newMap);\n    setcoverPhoto(project.coverphoto);\n    setDomain(project.domain);\n    setSelectedTags(project.tags);\n    setPrice(project.price);\n    setProjectLink(project.projectlink);\n  };\n  const convertArrayToMap = array => {\n    const map = new Map();\n    array.forEach(item => {\n      map.set(item.key, item.value);\n    });\n    return map;\n  };\n  const navigateToSuccess = () => {\n    // Redirect to Success Page\n    navigate(`/upload-success`);\n  };\n  const setDomainsArray = async () => {\n    try {\n      const response = await fetchDropDownDataDB({\n        range: 'all'\n      });\n      const domainData = response.data.domain;\n      setDropdownData(domainData);\n      const dynamicOptions = Object.keys(domainData);\n      setDomainList(dynamicOptions);\n    } catch (error) {\n      console.error('Error fetching dropdown data:', error);\n    }\n  };\n  const handleButtonClick = () => {\n    // Trigger the file picker input\n    coverInputRef.current.click();\n  };\n  const setTopicsArray = async () => {\n    var c = 0;\n    for (const key in dropdownData) {\n      if (key == domain) {\n        c = 1;\n        setTopicList(dropdownData[key]);\n        break;\n      }\n    }\n    if (c == 0) setTopicList([]);\n  };\n  const handlePriceChange = e => {\n    if (e.target.value < 0 || e.target.value.length > 6) return;\n    setPrice(e.target.value);\n  };\n  const handleTagUnselect = e => {\n    const selectedTag = e.currentTarget.dataset.value;\n    // Add the selected tag into topicList\n    setTopicList([...topicList, selectedTag]);\n    // Remove the selected tag from the selectedTags array\n    const updatedSelectedTags = selectedTags.filter(tag => tag !== selectedTag);\n    setSelectedTags(updatedSelectedTags);\n  };\n  const handleAddTag = e => {\n    setSelectedTags([...selectedTags, e.target.value]);\n    const updatedTopicList = topicList.filter(tag => tag !== e.target.value);\n    setTopicList(updatedTopicList);\n  };\n  const handleDomainChange = e => {\n    setDomain(e.target.value);\n  };\n  const handleProjectLinkChange = e => {\n    if (e.target.value.length > 500) return;\n    setProjectLink(e.target.value);\n  };\n  const handleFileChange = (e, key) => {\n    const file = e.target.files[0];\n    setStringFileMap(prevMap => new Map(prevMap.set(key, file)));\n  };\n  const handleTitleChange = e => {\n    if (e.target.value.length > 90) return;\n    setTextInputs({\n      ...textInputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleDescriptionChange = e => {\n    if (e.target.value.length > 1000) return;\n    setTextInputs({\n      ...textInputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleCoverPhotoChange = e => {\n    try {\n      setcoverPhoto(e.target.files[0]);\n      setCoverFileName(e.target.files[0].name);\n    } catch (error) {\n      setcoverPhoto(null);\n      setCoverFileName('');\n    }\n  };\n  const handleCancelButtonClick = e => {\n    setcoverPhoto(null);\n    setCoverFileName('');\n  };\n  const handleTextmoreField = e => {\n    if (e.target.value.length > 50) return;\n    setmoreField(e.target.value);\n  };\n  const deleteField = input => {\n    stringFileMap.delete(input);\n    setFileInputs(fileInputs.filter(item => item !== input));\n  };\n  const addFileInput = () => {\n    if (moreField == '' || fileInputs.includes(moreField)) return;\n    setmoreField('');\n    const newFileInputs = [...fileInputs, moreField];\n    setFileInputs(newFileInputs);\n    setAddDocButtonOpen(false);\n  };\n  const handleAddDocButton = () => {\n    if (stringFileMap.size <= 10) setAddDocButtonOpen(true);\n  };\n  const disableAddDoc = () => {\n    setAddDocButtonOpen(false);\n  };\n  const updateAvailableDropdowns = async (domain, tags) => {\n    try {\n      const response = await fetchDropDownDataDB({\n        range: 'available'\n      });\n      const object = response.data;\n      const obj = response.data.domain;\n      if (Object.keys(obj).includes(domain)) {\n        tags.forEach(tag => {\n          if (!obj[domain].includes(tag)) {\n            obj[domain].push(tag);\n          }\n        });\n      } else {\n        obj[domain] = tags;\n      }\n      object.domain = obj;\n      await updateAvailableDropDownDataDB(object);\n    } catch (error) {\n      console.error('Error updating available dropdowns:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (domain && selectedTags.length > 0 && stringFileMap.size > 0) {\n      try {\n        setLoading(true);\n        setTimeout(() => {\n          navigateToSuccess();\n        }, 2000);\n        // Create a javascript object to store all data\n        const projectDocuments = [];\n        // Storing necessary details in JS Object\n        const projectData = {};\n        projectData['title'] = textInputs.textInput1;\n        projectData['description'] = textInputs.textInput2;\n        projectData['rating'] = [];\n        projectData['owner'] = user.email;\n        projectData['price'] = price;\n        projectData['projectlink'] = projectLink;\n        // Add Domain & Topic Tags\n        projectData['domain'] = domain;\n        const tags = ['All', ...selectedTags];\n        projectData['tags'] = tags;\n        await updateAvailableDropdowns(domain, tags);\n        // Storing Cover Photo in JS Object if provided\n        if (coverPhoto) {\n          const coverPhotoLink = await uploadFile(coverPhoto, coverPhoto.name);\n          projectData['coverphoto'] = coverPhotoLink;\n        } else {\n          projectData['coverphoto'] = \"https://firebasestorage.googleapis.com/v0/b/project-vault-b6e5e.appspot.com/o/coverImage.png?alt=media&token=ac2709cb-bcf0-4f1a-9665-0f525d83ba20\";\n        }\n        // Storing the document links in array\n        for (const key of stringFileMap.keys()) {\n          const file = stringFileMap.get(key);\n          if (file) {\n            const fileURL = await uploadFile(file, file.name);\n            // Adding Document-DocumentLink as key-value pairs\n            projectDocuments.push({\n              key,\n              value: fileURL\n            });\n          }\n        }\n        // Added documents object into our main object.\n        projectData['documents'] = projectDocuments;\n        // Uploaded Project to DB & recieved the documentID\n        const projectDocumentData = await uploadDocument(projectData);\n        // Storing the documentID in projects list of User.\n        const documentIDData = {};\n        documentIDData['id'] = projectDocumentData.id;\n        documentIDData['email'] = user.email;\n        await connectProjectToUser(documentIDData);\n      } catch (error) {\n        alert('There was an error while uploading project !');\n        setLoading(false);\n      }\n    } else {\n      alert('All required fields are not filled !');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-message\",\n      children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n        color: \"#000000\",\n        height: 50,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this), !loading && !project && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some error occured, Try again later !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this), !loading && project && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"upload-heading\",\n            children: \"Upload New Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"textInput1\",\n              value: textInputs.textInput1,\n              onChange: handleTitleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"label\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: 6,\n              type: \"text\",\n              name: \"textInput2\",\n              value: textInputs.textInput2,\n              onChange: handleDescriptionChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"label\",\n              children: \"Cover Photo (optional) \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: coverInputRef,\n              name: `coverphoto`,\n              style: {\n                display: 'none'\n              },\n              onChange: e => handleCoverPhotoChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 25\n            }, this), coverFileName == '' && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"cover-upload-button\",\n              onClick: handleButtonClick,\n              children: \"Choose File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 48\n            }, this), coverFileName != '' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cover-selected-div\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-text\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [coverFileName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 50\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"delete\",\n                onClick: handleCancelButtonClick,\n                children: \"Delete File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"label\",\n              children: \"Project Link (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"ProjectLink\",\n              value: projectLink,\n              onChange: handleProjectLinkChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"fileInputsContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 25\n            }, this), fileInputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"doc-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"doc-box-LHS\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"doc-box-label\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: `${input}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 60\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  className: \"doc-box-input\",\n                  name: `fileInput[${index}]`,\n                  onChange: e => handleFileChange(e, input),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"doc-box-button\",\n                type: \"button\",\n                onClick: e => deleteField(input),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  className: \"icon\",\n                  icon: faTrash\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 29\n              }, this)]\n            }, input, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 21\n          }, this), !addDocButtonOpen && fileInputs.length < 10 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-doc-button\",\n            type: \"button\",\n            onClick: e => handleAddDocButton(),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), addDocButtonOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-doc-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-doc-inner-div\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"add-doc-label\",\n                children: \"File Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"add-doc-input\",\n                name: \"textInput2\",\n                value: moreField,\n                onChange: handleTextmoreField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 25\n            }, this), screenWidth <= 600 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-doc-button-div\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"doc-button-in\",\n                type: \"button\",\n                onClick: addFileInput,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"doc-button-in\",\n                type: \"button\",\n                onClick: disableAddDoc,\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this), screenWidth > 600 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"doc-button-in\",\n              type: \"button\",\n              onClick: addFileInput,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this), screenWidth > 600 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"doc-button-in\",\n              type: \"button\",\n              onClick: disableAddDoc,\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label\",\n            children: \"Select Domain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"dropdown\",\n            value: domain,\n            onChange: handleDomainChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 25\n            }, this), domainList.map(domain1 => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: domain1,\n              children: domain1\n            }, domain1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label\",\n            children: \"Select Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"dropdown\",\n            value: tag,\n            onChange: handleAddTag,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 25\n            }, this), topicList.map(domain1 => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: domain1,\n              children: domain1\n            }, domain1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tag-list\",\n            children: selectedTags.map(tag => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"selected-tag\",\n              onClick: handleTagUnselect,\n              \"data-value\": tag,\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"label\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"Price\",\n              value: price,\n              onChange: handlePriceChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 21\n          }, this), !loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit-button\",\n            children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n              color: \"#FFFFFF\",\n              height: 15,\n              width: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(EditProject, \"Xc7H7ACxn3Qq9rn8+0MB+53OU6c=\", false, function () {\n  return [useAuth0, useNavigate, useLocation];\n});\n_c = EditProject;\nexport default EditProject;\nvar _c;\n$RefreshReg$(_c, \"EditProject\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","useAuth0","checkProjectOwnership","fetchProjectfromDB","updateAvailableDropDownDataDB","fetchDropDownDataDB","uploadFile","uploadDocument","connectProjectToUser","ThreeDots","FontAwesomeIcon","faTrash","jsxDEV","_jsxDEV","Fragment","_Fragment","EditProject","_s","isAuthenticated","user","navigate","search","queryParams","URLSearchParams","projectID","get","loading","setLoading","project","setProject","textInputs","setTextInputs","textInput1","textInput2","fileInputs","setFileInputs","moreField","setmoreField","stringFileMap","setStringFileMap","Map","coverPhoto","setcoverPhoto","domain","setDomain","selectedTags","setSelectedTags","tag","setTag","price","setPrice","domainList","setDomainList","topicList","setTopicList","projectLink","setProjectLink","coverFileName","setCoverFileName","addDocButtonOpen","setAddDocButtonOpen","dropdownData","setDropdownData","coverInputRef","createRef","screenWidth","setScreenWidth","window","innerWidth","setDomainsArray","setTopicsArray","checkProjectOwnershipFunction","fetchProjectData","replace","res","email","owner","setDataInFields","error","title","description","obj1","i","documents","length","push","key","newMap","convertArrayToMap","coverphoto","tags","projectlink","array","map","forEach","item","set","value","navigateToSuccess","response","range","domainData","data","dynamicOptions","Object","keys","console","handleButtonClick","current","click","c","handlePriceChange","e","target","handleTagUnselect","selectedTag","currentTarget","dataset","updatedSelectedTags","filter","handleAddTag","updatedTopicList","handleDomainChange","handleProjectLinkChange","handleFileChange","file","files","prevMap","handleTitleChange","name","handleDescriptionChange","handleCoverPhotoChange","handleCancelButtonClick","handleTextmoreField","deleteField","input","delete","addFileInput","includes","newFileInputs","handleAddDocButton","size","disableAddDoc","updateAvailableDropdowns","object","obj","handleSubmit","preventDefault","setTimeout","projectDocuments","projectData","coverPhotoLink","fileURL","projectDocumentData","documentIDData","id","alert","children","className","color","height","width","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","rows","ref","style","display","onClick","index","icon","domain1","_c","$RefreshReg$"],"sources":["C:/Users/omsin/Desktop/Project Vault Main Folder/ProjectVault/projectvault/src/pages/EditProject/EditProject.jsx"],"sourcesContent":["import './EditProject.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { checkProjectOwnership, fetchProjectfromDB } from '../../Service/api';\r\nimport { updateAvailableDropDownDataDB, fetchDropDownDataDB, uploadFile, uploadDocument, connectProjectToUser } from '../../Service/api';\r\nimport { ThreeDots    } from 'react-loader-spinner';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n  \r\n\r\nfunction EditProject() {\r\n    const { isAuthenticated, user } = useAuth0();\r\n    const navigate = useNavigate();\r\n    const { search } = useLocation();\r\n    const queryParams = new URLSearchParams(search);\r\n    const projectID = queryParams.get('projectID');\r\n    const [loading , setLoading] = useState(true);\r\n    const [project , setProject] = useState(null);\r\n\r\n    const [textInputs, setTextInputs] = useState({\r\n        textInput1: '',\r\n        textInput2: '',\r\n    });\r\n    const [fileInputs, setFileInputs] = useState([]);\r\n    const [moreField, setmoreField] = useState(['']);\r\n    const [stringFileMap, setStringFileMap] = useState(new Map());\r\n    const [coverPhoto, setcoverPhoto] = useState('');\r\n    const [domain, setDomain] = useState('');\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [tag, setTag] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [domainList, setDomainList] = useState([]);\r\n    const [topicList, setTopicList] = useState([]);\r\n    const [projectLink, setProjectLink] = useState('');\r\n    const [coverFileName, setCoverFileName] = useState('');\r\n    const [addDocButtonOpen, setAddDocButtonOpen] = useState(false);\r\n    const [dropdownData, setDropdownData] = useState(null);\r\n    const coverInputRef = React.createRef();\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    useEffect(()=>{\r\n        if(dropdownData==null)\r\n        setDomainsArray();\r\n    },[]);\r\n        useEffect(()=>{\r\n        setTopicsArray();\r\n    },[domain]);\r\n\r\n    React.useEffect( () => {\r\n        checkProjectOwnershipFunction();\r\n    }, [isAuthenticated]);\r\n    React.useEffect( () => {\r\n        if(isAuthenticated && projectID)\r\n        fetchProjectData();\r\n    }, []);\r\n    const checkProjectOwnershipFunction = async () => {\r\n        if (!isAuthenticated) {\r\n            navigate('/', { replace: true });\r\n        }\r\n        else\r\n        {\r\n            const res = await checkProjectOwnership(user.email, projectID);\r\n            if(res.owner==false)\r\n            {\r\n                navigate('/', { replace: true });\r\n            }\r\n        }\r\n    };\r\n    const fetchProjectData = async () => {\r\n        try {\r\n            const res = await fetchProjectfromDB(projectID);\r\n            setProject(res.project);\r\n            setDataInFields();\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    const setDataInFields = () => {\r\n        setTextInputs({\r\n            textInput1: project.title,\r\n            textInput2: project.description,\r\n        });\r\n        const obj1=[];\r\n        for( var i = 0 ; i<project.documents.length ; i++ )\r\n        {\r\n            obj1.push(project.documents[i].key);\r\n        }\r\n        setFileInputs(obj1);\r\n        const newMap = convertArrayToMap(project.documents);\r\n        setStringFileMap(newMap);\r\n        setcoverPhoto(project.coverphoto);\r\n        setDomain(project.domain);\r\n        setSelectedTags(project.tags);\r\n        setPrice(project.price);\r\n        setProjectLink(project.projectlink);\r\n    };\r\n    const convertArrayToMap = (array) => {\r\n        const map = new Map();\r\n        array.forEach(item => {\r\n            map.set(item.key, item.value);\r\n        });\r\n        return map;\r\n    };\r\n\r\n    \r\n\r\n    \r\n\r\n    const navigateToSuccess = () => {\r\n        // Redirect to Success Page\r\n        navigate(`/upload-success`);\r\n    };\r\n    const setDomainsArray = async () => {\r\n    try {\r\n        const response = await fetchDropDownDataDB({ range : 'all' }); \r\n        const domainData = response.data.domain;\r\n        setDropdownData(domainData);\r\n        const dynamicOptions = Object.keys(domainData); \r\n        setDomainList(dynamicOptions);\r\n    } catch (error) {\r\n        console.error('Error fetching dropdown data:', error);\r\n    }\r\n    };\r\n    const handleButtonClick = () => {\r\n    // Trigger the file picker input\r\n    coverInputRef.current.click();\r\n    };\r\n    const setTopicsArray = async () => {\r\n    var c=0;\r\n    for (const key in dropdownData) {\r\n        if(key==domain)\r\n        {\r\n        c=1;\r\n        setTopicList(dropdownData[key]);\r\n        break;\r\n        }\r\n    }\r\n    if(c==0)\r\n    setTopicList([]);\r\n    };\r\n    const handlePriceChange = (e) => {\r\n    if( e.target.value<0 || e.target.value.length>6)\r\n    return;\r\n    setPrice(e.target.value);\r\n    };\r\n    const handleTagUnselect = (e) => {\r\n    const selectedTag = e.currentTarget.dataset.value;\r\n    // Add the selected tag into topicList\r\n    setTopicList([...topicList, selectedTag]);\r\n    // Remove the selected tag from the selectedTags array\r\n    const updatedSelectedTags = selectedTags.filter((tag) => tag !== selectedTag);\r\n    setSelectedTags(updatedSelectedTags);\r\n    };\r\n    const handleAddTag = (e) => {\r\n    setSelectedTags([...selectedTags,e.target.value]);\r\n    const updatedTopicList = topicList.filter(tag => tag !== e.target.value);\r\n    setTopicList(updatedTopicList);\r\n    };\r\n    const handleDomainChange = (e) => {\r\n    setDomain(e.target.value);\r\n    };\r\n    const handleProjectLinkChange = (e) => {\r\n    if(e.target.value.length>500)\r\n    return;\r\n    setProjectLink(e.target.value);\r\n    };\r\n    const handleFileChange = (e, key) => {\r\n    const file = e.target.files[0];\r\n    setStringFileMap((prevMap) => new Map(prevMap.set(key, file)));\r\n    };\r\n    const handleTitleChange = (e) => {\r\n    if(e.target.value.length>90)\r\n    return;\r\n    setTextInputs({ ...textInputs, [e.target.name]: e.target.value });\r\n    };\r\n    const handleDescriptionChange = (e) => {\r\n    if(e.target.value.length>1000)\r\n    return;\r\n    setTextInputs({ ...textInputs, [e.target.name]: e.target.value });\r\n    };\r\n    const handleCoverPhotoChange = (e) => {\r\n    try {\r\n        setcoverPhoto(e.target.files[0]);\r\n        setCoverFileName(e.target.files[0].name);\r\n    } catch (error) {\r\n        setcoverPhoto(null);\r\n        setCoverFileName('');\r\n    }\r\n    };\r\n    const handleCancelButtonClick = (e) => {\r\n    setcoverPhoto(null);\r\n    setCoverFileName('');\r\n    };\r\n    const handleTextmoreField = (e) => {\r\n    if(e.target.value.length>50)\r\n    return;\r\n    setmoreField(e.target.value);\r\n    };\r\n    const deleteField = (input) => {\r\n    stringFileMap.delete(input);\r\n    setFileInputs(fileInputs.filter((item) => item !== input));\r\n    };\r\n    const addFileInput = () => {\r\n    if( moreField=='' || fileInputs.includes(moreField))\r\n    return;\r\n    setmoreField('');\r\n    const newFileInputs = [...fileInputs, moreField];\r\n    setFileInputs(newFileInputs);\r\n    setAddDocButtonOpen(false);\r\n    };\r\n    const handleAddDocButton = () => {\r\n    if(stringFileMap.size<=10)\r\n    setAddDocButtonOpen(true);\r\n    };\r\n    const disableAddDoc = () => {\r\n    setAddDocButtonOpen(false);\r\n    };\r\n    const updateAvailableDropdowns = async (domain, tags) => {\r\n    try {\r\n        const response = await fetchDropDownDataDB({ range: 'available' });\r\n        const object = response.data;\r\n        const obj = response.data.domain;\r\n        if (Object.keys(obj).includes(domain)) {\r\n        tags.forEach((tag) => {\r\n            if (!obj[domain].includes(tag)) {\r\n            obj[domain].push(tag);\r\n            }\r\n        });\r\n        } else {\r\n        obj[domain] = tags;\r\n        }\r\n        object.domain=obj;\r\n        await updateAvailableDropDownDataDB(object);\r\n    \r\n    } catch (error) {\r\n        console.error('Error updating available dropdowns:', error);\r\n    }\r\n    };\r\n    const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if( domain && selectedTags.length>0 && stringFileMap.size>0){\r\n        try {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            navigateToSuccess();\r\n        }, 2000);\r\n        // Create a javascript object to store all data\r\n        const projectDocuments = [];\r\n        // Storing necessary details in JS Object\r\n        const projectData = {};\r\n        projectData['title'] = textInputs.textInput1;\r\n        projectData['description'] = textInputs.textInput2;\r\n        projectData['rating'] = [];\r\n        projectData['owner'] = user.email;\r\n        projectData['price'] = price;\r\n        projectData['projectlink'] = projectLink;\r\n        // Add Domain & Topic Tags\r\n        projectData['domain'] = domain;\r\n        const tags=['All', ...selectedTags];\r\n        projectData['tags'] = tags;\r\n\r\n        await updateAvailableDropdowns(domain, tags);\r\n        // Storing Cover Photo in JS Object if provided\r\n        if (coverPhoto) {\r\n            const coverPhotoLink = await uploadFile(coverPhoto, coverPhoto.name);\r\n            projectData['coverphoto'] = coverPhotoLink;\r\n        } else {projectData['coverphoto'] = \"https://firebasestorage.googleapis.com/v0/b/project-vault-b6e5e.appspot.com/o/coverImage.png?alt=media&token=ac2709cb-bcf0-4f1a-9665-0f525d83ba20\";}\r\n        // Storing the document links in array\r\n        for (const key of stringFileMap.keys()) {\r\n            const file = stringFileMap.get(key);\r\n            if (file) {\r\n                const fileURL = await uploadFile(file, file.name);\r\n                // Adding Document-DocumentLink as key-value pairs\r\n                projectDocuments.push({ key, value: fileURL });}}\r\n        // Added documents object into our main object.\r\n        projectData['documents'] = projectDocuments;\r\n        // Uploaded Project to DB & recieved the documentID\r\n        const projectDocumentData = await uploadDocument(projectData);\r\n        // Storing the documentID in projects list of User.\r\n        const documentIDData = {};\r\n        documentIDData['id']=projectDocumentData.id;\r\n        documentIDData['email']=user.email;\r\n        await connectProjectToUser(documentIDData);\r\n\r\n        } catch (error) {alert('There was an error while uploading project !');setLoading(false);}\r\n    }\r\n    else { alert('All required fields are not filled !');setLoading(false); }\r\n    };\r\n\r\n\r\n  return (\r\n    <>\r\n        { loading &&\r\n            <div className='loader-message'>\r\n                <ThreeDots \r\n                    color=\"#000000\"\r\n                    height={50}\r\n                    width={50}\r\n                />\r\n            </div>\r\n        }\r\n        { !loading && !project &&\r\n            <div className='loader-message'>\r\n                <p>Some error occured, Try again later !</p>\r\n            </div>\r\n        }\r\n        { !loading && project &&\r\n            <>\r\n                <div className='form'>\r\n                    <div>\r\n                        <h1 className='upload-heading'>Upload New Project</h1>\r\n                    </div>\r\n                        \r\n                    <form onSubmit={handleSubmit}>\r\n\r\n                    <div className='inner-div'>\r\n                        <p className='label'>Title</p>\r\n                        <input type=\"text\" name=\"textInput1\" value={textInputs.textInput1} onChange={handleTitleChange} required />\r\n                    </div>\r\n                    \r\n                    <div className='inner-div'>\r\n                        <p className='label'>Description</p>\r\n                        <textarea rows={6} type=\"text\" name=\"textInput2\" value={textInputs.textInput2} onChange={handleDescriptionChange} required />\r\n                    </div>\r\n                    \r\n                    <div className='inner-div'>\r\n                        <p className='label'>Cover Photo (optional) </p> \r\n                        <input type=\"file\" ref={coverInputRef} name={`coverphoto`} style={{ display: 'none' }} onChange={(e) => handleCoverPhotoChange(e)} />\r\n                        { coverFileName=='' && <button type=\"button\" className='cover-upload-button' onClick={handleButtonClick}>Choose File</button>}\r\n                        { coverFileName!='' && <div className='cover-selected-div'>\r\n                        <div className='p-text' ><p>{coverFileName} </p></div>\r\n                        <button type=\"button\" className='delete' onClick={handleCancelButtonClick}>Delete File</button>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <div className='inner-div'>\r\n                        <p className='label'>Project Link (optional)</p>\r\n                        <input type=\"text\" name=\"ProjectLink\" value={projectLink} onChange={handleProjectLinkChange} />\r\n                    </div>\r\n\r\n                    <div id=\"fileInputsContainer\">\r\n                        <p>Your Documents</p>\r\n                        {fileInputs.map((input, index) => (\r\n                        <div className='doc-box' key={input}>\r\n                            <div className='doc-box-LHS'>\r\n                            <div className='doc-box-label'><p>{`${input}`}</p></div>\r\n                            <input type=\"file\" className='doc-box-input' name={`fileInput[${index}]`} onChange={(e) => handleFileChange(e, input)} required />\r\n                            </div>\r\n                            <button className='doc-box-button' type=\"button\"  onClick={(e) => deleteField(input)}>\r\n                            <FontAwesomeIcon className='icon' icon={faTrash} />\r\n                            </button>\r\n                        </div>\r\n                        ))}\r\n                    </div> \r\n\r\n                    { !addDocButtonOpen && fileInputs.length<10 &&\r\n                        <button className='add-doc-button' type=\"button\"  onClick={(e) => handleAddDocButton()}>\r\n                        +\r\n                        </button>\r\n                    }\r\n                    \r\n                    { addDocButtonOpen && \r\n                        <div className='add-doc-section'>\r\n                        <div className='add-doc-inner-div'>\r\n                            <p className='add-doc-label'>File Name</p>\r\n                            <input type=\"text\" className='add-doc-input' name=\"textInput2\" value={moreField} onChange={handleTextmoreField} />\r\n                        </div>\r\n                        { screenWidth<=600 && \r\n                            <div className='add-doc-button-div'>\r\n                            <button className='doc-button-in' type=\"button\" onClick={addFileInput}>\r\n                                Add\r\n                            </button>\r\n                            <button className='doc-button-in' type=\"button\" onClick={disableAddDoc}>\r\n                                Remove\r\n                            </button>\r\n                            </div>\r\n                        }\r\n                        { screenWidth>600 &&\r\n                            <button className='doc-button-in' type=\"button\" onClick={addFileInput}>\r\n                            Add\r\n                            </button>\r\n                        }\r\n                        { screenWidth>600 &&\r\n                            <button className='doc-button-in' type=\"button\" onClick={disableAddDoc}>\r\n                            Remove\r\n                            </button>\r\n                        }\r\n                        \r\n                        </div>\r\n                    }\r\n                    \r\n\r\n                    <p className='label' >Select Domain</p>\r\n                    <select className=\"dropdown\" value={domain} onChange={handleDomainChange}>\r\n                        <option value=\"\">Select...</option>\r\n                        {domainList.map((domain1)=>(\r\n                        <option key={domain1} value={domain1}>{domain1}</option>\r\n                        ))}\r\n                    </select>\r\n                    \r\n                    <p className='label' >Select Topic</p>\r\n                    <select className=\"dropdown\" value={tag} onChange={handleAddTag}>\r\n                        <option value=\"\">Select...</option>\r\n                        {topicList.map((domain1)=>(\r\n                        <option  key={domain1}  value={domain1}>{domain1}</option>\r\n                        ))}\r\n                    </select>\r\n                    \r\n                    <div className='tag-list'>\r\n                        {selectedTags.map((tag)=>(\r\n                        <p  key={tag} className='selected-tag' onClick={handleTagUnselect} data-value={tag}>{tag}</p>\r\n                        ))}\r\n                    </div>\r\n                    \r\n                    <div  className='inner-div'>\r\n                        <p className='label'>Price</p>\r\n                        <input type=\"number\" name=\"Price\" value={price} onChange={handlePriceChange} required />\r\n                    </div>\r\n\r\n                    { !loading \r\n                        ? <button className='submit-button' type=\"submit\">Submit</button>\r\n                        : <div className='submit-button'>\r\n                            <ThreeDots \r\n                            color=\"#FFFFFF\"\r\n                            height={15}\r\n                            width={50}  \r\n                            />\r\n                        </div>\r\n\r\n                    }\r\n                    \r\n                    \r\n                    </form>\r\n                </div>\r\n            </>\r\n        }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditProject;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}